@page "/staff/details"
@using Microsoft.EntityFrameworkCore
@using TravelItineraryProject.Domain
@inject IDbContextFactory<TravelItineraryProject.Data.TravelItineraryProjectContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>Staff</h2>
    <hr />
    @if (staff is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Name:</dt>
            <dd class="col-sm-10">@staff.Name</dd>
            <dt class="col-sm-2">Email:</dt>
            <dd class="col-sm-10">@staff.Email</dd>
        </dl>
        <div>
            <AuthorizeView Roles="Administrator">
                <a href="@($"/staff/edit?staffid={staff.StaffId}")">Edit</a> |
            </AuthorizeView>
            <a href="@($"/staff")">Back to List</a>
        </div>
    }
</div>

@code {
    private Staff? staff;

    [SupplyParameterFromQuery]
    private int StaffId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        staff = await context.Staff.FirstOrDefaultAsync(m => m.StaffId == StaffId);

        if (staff is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
