@page "/itineraryrequests/create"
@using Microsoft.EntityFrameworkCore
@using TravelItineraryProject.Domain
@inject IDbContextFactory<TravelItineraryProject.Data.TravelItineraryProjectContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>ItineraryRequest</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="ItineraryRequest" OnValidSubmit="AddItineraryRequest" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="requestapproval" class="form-label">RequestApproval:</label> 
                <InputCheckbox id="requestapproval" @bind-Value="ItineraryRequest.RequestApproval" class="form-check-input" /> 
                <ValidationMessage For="() => ItineraryRequest.RequestApproval" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="requesttravelmonthyear" class="form-label">RequestTravelMonthYear:</label> 
                <InputText id="requesttravelmonthyear" @bind-Value="ItineraryRequest.RequestTravelMonthYear" class="form-control" /> 
                <ValidationMessage For="() => ItineraryRequest.RequestTravelMonthYear" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="destination" class="form-label">Destination:</label> 
                <InputText id="destination" @bind-Value="ItineraryRequest.Destination" class="form-control" /> 
                <ValidationMessage For="() => ItineraryRequest.Destination" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="typeoftrip" class="form-label">TypeOfTrip:</label> 
                <InputText id="typeoftrip" @bind-Value="ItineraryRequest.TypeOfTrip" class="form-control" /> 
                <ValidationMessage For="() => ItineraryRequest.TypeOfTrip" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="customerid" class="form-label">CustomerId:</label> 
                <InputNumber id="customerid" @bind-Value="ItineraryRequest.CustomerId" class="form-control" /> 
                <ValidationMessage For="() => ItineraryRequest.CustomerId" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="staffid" class="form-label">StaffId:</label> 
                <InputNumber id="staffid" @bind-Value="ItineraryRequest.StaffId" class="form-control" /> 
                <ValidationMessage For="() => ItineraryRequest.StaffId" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/itineraryrequests">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private ItineraryRequest ItineraryRequest { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddItineraryRequest()
    {
        using var context = DbFactory.CreateDbContext();
        context.ItineraryRequest.Add(ItineraryRequest);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/itineraryrequests");
    }
}
