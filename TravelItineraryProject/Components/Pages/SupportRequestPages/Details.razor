@page "/supportrequests/details"
@using Microsoft.EntityFrameworkCore
@using TravelItineraryProject.Domain
@inject IDbContextFactory<TravelItineraryProject.Data.TravelItineraryProjectContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<h1>Details</h1>

<div>
    <h2>SupportRequest</h2>
    <hr />
    @if (supportrequest is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Comments</dt>
            <dd class="col-sm-10">@supportrequest.Comments</dd>
            <dt class="col-sm-2">TypeofSupport</dt>
            <dd class="col-sm-10">@supportrequest.TypeofSupport</dd>
            <AuthorizeView Roles="Administrator, Staff">
                <dt class="col-sm-2">CustomerId</dt>
                <dd class="col-sm-10">@supportrequest.CustomerId</dd>
                <dt class="col-sm-2">StaffId</dt>
                <dd class="col-sm-10">@supportrequest.StaffId</dd>
            </AuthorizeView>
            <dt class="col-sm-2">Responds</dt>
            <dd class="col-sm-10">@supportrequest.Responds</dd>
            <dt class="col-sm-2">Assisted</dt>
            <dd class="col-sm-10">@supportrequest.Assisted</dd>
        </dl>
        <div>
            <AuthorizeView Roles="Administrator, Staff">
                <a href="@($"/supportrequests/respond?supportrequestid={supportrequest.SupportRequestId}")">Respond</a> |
            </AuthorizeView>
            <a href="@($"/supportrequests")">Back to List</a>
        </div>
    }
</div>

@code {
    private SupportRequest? supportrequest;

    [SupplyParameterFromQuery]
    private int SupportRequestId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        supportrequest = await context.SupportRequest.FirstOrDefaultAsync(m => m.SupportRequestId == SupportRequestId);

        if (supportrequest is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
